{"version":3,"sources":["components/Navbar.js","components/Slider.js","components/AboutMeModal.js","home.jsx","resource/projects.js","components/Cards.js","Portfolio.js","Contact.js","404.js","serviceWorker.js","index.js"],"names":["Header","Fragment","bg","variant","fixed","className","Brand","href","Link","active","style","color","picArray","Slider","props","map","value","index","Item","key","src","alt","Caption","onClick","modal","size","aria-labelledby","centered","closeButton","Title","id","Body","Footer","onHide","App","React","useState","modalShow","setModalShow","show","projects","memoryGame","name","git","deploy","img","mongoScraper","reactTetris","rateMyPlace","eventEasy","eatDaBurger","friendFinder","trainScheduler","giftastic","triviaGame","hangman","Cards","cardsArr","push","Img","Text","type","makeCards","class","NA","Boolean","window","location","hostname","match","router","exact","path","component","Home","Portfolio","Contact","NotFound","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.88f81b97.chunk.js","sourcesContent":["import React from 'react';\r\nimport Nav from 'react-bootstrap/Nav';\r\nimport Navbar from 'react-bootstrap/Navbar';\r\nimport \"../CSS/navbar.css\"\r\n\r\n\r\n\r\nconst Header = () => {\r\n\r\n        return(\r\n            <React.Fragment>\r\n            <Navbar bg=\"?\" variant=\"dark\" fixed = \"top\" className=\"header\">\r\n                <Navbar.Brand href=\"/\">Jared Wight</Navbar.Brand>\r\n                <Nav className=\"ml-auto \">\r\n                    <Nav.Link href=\"/\" active>Home</Nav.Link>\r\n                    <Nav.Link href=\"/portfolio\" active>Portfolio</Nav.Link>\r\n                    <Nav.Link href=\"/contact\" active>Contact</Nav.Link>\r\n                    <Nav.Link href=\"https://github.com/Trail3lazer\" active><i className=\"fab fa-github\"></i></Nav.Link>\r\n                    <Nav.Link href=\"https://www.linkedin.com/in/jaredwight/\"><i className=\"fab fa-linkedin\" style={{color: \"#04A8F9\"}}></i></Nav.Link>\r\n                </Nav>\r\n                \r\n            </Navbar>\r\n            </React.Fragment>\r\n        );\r\n    }\r\n\r\nexport default Header;","import React from 'react';\r\nimport Carousel from \"react-bootstrap/Carousel\";\r\nimport Button from \"react-bootstrap/Button\"\r\nimport \"../CSS/slider.css\"\r\n\r\nlet picArray = [\r\n    \"https://d1p0m2aj917ekc.cloudfront.net/slider/C97A4562.jpg\", \r\n    \"https://d1p0m2aj917ekc.cloudfront.net/slider/IMG_7554-photo.png\", \r\n    \"https://d1p0m2aj917ekc.cloudfront.net/slider/IMG_7582-photo.JPG\", \r\n    \"https://d1p0m2aj917ekc.cloudfront.net/slider/C97A4446.jpg\"\r\n]\r\n\r\nconst Slider = (props) => {\r\n        return (\r\n            <React.Fragment>\r\n                <Carousel>\r\n                    {picArray.map((value, index) => {\r\n                        return <Carousel.Item key={index}>\r\n                            <img\r\n                                className=\"img-fluid\"\r\n                                src={value}\r\n                                alt={index}\r\n                            />\r\n                            <Carousel.Caption>\r\n                                <Button variant=\"dark\" className=\"aboutBtn\"\r\n                                onClick={props.modal}>About Me</Button>\r\n                            </Carousel.Caption>\r\n                        </Carousel.Item>\r\n                    })}\r\n                </Carousel>\r\n            </React.Fragment>\r\n        );\r\n    }\r\n\r\n\r\nexport default Slider;\r\n","import React from \"react\"\r\nimport Modal from \"react-bootstrap/Modal\"\r\nimport Button from \"react-bootstrap/Button\"\r\n\r\nfunction modal(props) {\r\n    return (\r\n        <Modal\r\n        {...props}\r\n        size=\"lg\"\r\n        aria-labelledby=\"contained-modal-title-vcenter\"\r\n        centered\r\n      >\r\n        <Modal.Header closeButton>\r\n          <Modal.Title id=\"contained-modal-title-vcenter\">\r\n            Modal heading\r\n          </Modal.Title>\r\n        </Modal.Header>\r\n        <Modal.Body>\r\n          <h4>Centered Modal</h4>\r\n          <p>\r\n            Cras mattis consectetur purus sit amet fermentum. Cras justo odio,\r\n            dapibus ac facilisis in, egestas eget quam. Morbi leo risus, porta ac\r\n            consectetur ac, vestibulum at eros.\r\n          </p>\r\n        </Modal.Body>\r\n        <Modal.Footer>\r\n          <Button onClick={props.onHide}>Close</Button>\r\n        </Modal.Footer>\r\n      </Modal>\r\n    );\r\n  }\r\n\r\nexport default modal;","import React from 'react';\r\nimport Slider from \"./components/Slider\";\r\nimport Modal from \"./components/AboutMeModal\"\r\nimport './App.css';\r\n\r\nfunction App() {\r\n  const [modalShow, setModalShow] = React.useState(false);\r\n\r\n  return (\r\n    \r\n      <div className=\"App\">\r\n        <Slider modal={() => { setModalShow(true) }} />\r\n        <Modal\r\n          show={modalShow}\r\n          onHide={() => setModalShow(false)}\r\n        />\r\n      </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","let projects = {\r\n    memoryGame: {\r\n        name: \"React Memory Game\",\r\n        git: \"https://github.com/Trail3lazer/memory-game\",\r\n        deploy: \"https://memory-game-jw.herokuapp.com/\",\r\n        img: 'https://d1p0m2aj917ekc.cloudfront.net/projects/memoryGame.png',\r\n    },\r\n    mongoScraper: {\r\n        name: \"NFL Puppeteer MongoDB Scraper\",\r\n        git:  'https://github.com/Trail3lazer/MongoDB-Scraper',\r\n        deploy: 'https://puppeteer-mongodb-scraper.herokuapp.com',\r\n        img: 'https://d1p0m2aj917ekc.cloudfront.net/projects/puppeteerMongo.png'\r\n    },\r\n    reactTetris: {\r\n        name: \"React Tetris\",\r\n        git:  'https://github.com/Trail3lazer/React-Tetris',\r\n        deploy: 'https://tetris-jw.herokuapp.com/',\r\n        img: 'https://d1p0m2aj917ekc.cloudfront.net/projects/reactTetris.png'\r\n    },\r\n    rateMyPlace: {\r\n        name: \"Rate My Place\",\r\n        git:  'https://github.com/Trail3lazer/rate-my-place',\r\n        deploy: 'https://ratemypad.herokuapp.com/',\r\n        img: 'https://d1p0m2aj917ekc.cloudfront.net/projects/rateMyPlace.png'\r\n    },\r\n    eventEasy: {\r\n        name: \"Event Easy\",\r\n        git: \"https://github.com/NateElorreaga/Project1_Group1\",\r\n        deploy: \"https://nateelorreaga.github.io/Project1_Group1/\",\r\n        img: 'https://d1p0m2aj917ekc.cloudfront.net/projects/event.png'\r\n    },\r\n    eatDaBurger: {\r\n        name: \"Eat-Da-Burger\",\r\n        git: \"https://github.com/Trail3lazer/EatDaBurger\",\r\n        deploy: \"https://eat-duh-burger.herokuapp.com/\",\r\n        img: \"https://d1p0m2aj917ekc.cloudfront.net/projects/burger.png\"\r\n    },\r\n    friendFinder: {\r\n        name: \"Friend Finder\",\r\n        git: \"https://github.com/Trail3lazer/FriendFinder\",\r\n        deploy: \"https://friend-finder-for-the-lonely.herokuapp.com/\",\r\n        img: 'https://d1p0m2aj917ekc.cloudfront.net/projects/friend.png'\r\n    },\r\n    trainScheduler: {\r\n        name: \"Train Scheduler\",\r\n        git: 'https://github.com/Trail3lazer/trainSchedule',\r\n        deploy: 'https://trail3lazer.github.io/trainSchedule/',\r\n        img: 'https://d1p0m2aj917ekc.cloudfront.net/projects/train.png'\r\n    },\r\n    giftastic: {\r\n        name: \"Giftastic\",\r\n        git: 'https://github.com/Trail3lazer/GifTastic',\r\n        deploy: 'https://trail3lazer.github.io/GifTastic/',\r\n        img: 'https://d1p0m2aj917ekc.cloudfront.net/projects/gif.png'\r\n    },\r\n    triviaGame: {\r\n        name: \"Trivia\",\r\n        git: 'https://github.com/Trail3lazer/TriviaGame',\r\n        deploy: 'https://trail3lazer.github.io/TriviaGame/',\r\n        img: 'https://d1p0m2aj917ekc.cloudfront.net/projects/trivia.png'\r\n    },\r\n    hangman: {\r\n        name: \"Hangman\",\r\n        git: 'https://github.com/Trail3lazer/word-guess-game',\r\n        deploy: 'https://trail3lazer.github.io/word-guess-game/',\r\n        img: 'https://d1p0m2aj917ekc.cloudfront.net/projects/hangman.png'\r\n    },\r\n\r\n}\r\n\r\nexport default projects","import React from 'react';\r\nimport Card from 'react-bootstrap/Card';\r\nimport Button from 'react-bootstrap/Button'\r\nimport projects from \"../resource/projects.js\";\r\n\r\nconst makeCards = () => {\r\n    let cardsArr = [];\r\n    for (let key in projects) {\r\n\r\n\r\n        cardsArr.push(\r\n            <Card key={key} className=\"card text-white float-left col-md-5 p-2 m-4\">\r\n                <Card.Img src={projects[key].img} alt={projects[key].name + \" screenshot\"} className=\"img img-thumbnail\" />\r\n                <Card.Title className=\"text-center\">{projects[key].name}</Card.Title>\r\n                <Card.Text>\r\n                    <Button type=\"button\" href={projects[key].deploy} className=\"float-left btnLink btn\">Link to page</Button>\r\n                    <Button type=\"button\" href={projects[key].git} className=\"float-right btnLink btn\">Link to code</Button>\r\n                </Card.Text>\r\n            </Card>)\r\n\r\n    }\r\n    return cardsArr;\r\n}\r\n\r\nconst Cards = () => {\r\n\r\n\r\n    return (\r\n        <div className=\"container mt-5 pt-3\">\r\n            {makeCards()}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Cards;","import React from 'react';\nimport Cards from './components/Cards'\nimport './App.css';\n\nfunction App() {\n  return (\n    \n      <div className=\"portfolio\">\n        <Cards />\n      </div>\n  );\n}\n\nexport default App;","import React from 'react';\r\nimport Jumbotron from \"react-bootstrap/Jumbotron\"\r\nimport './App.css';\r\n\r\nfunction App() {\r\n\r\n  return (\r\n\r\n    <div className=\"jumboHolder\">\r\n      <div class=\"container p-3\">\r\n      </div>\r\n      <Jumbotron className=\"mt-5 bg-dark text-light mx-auto col-md-8 jumbotron text-center\">\r\n        <p>\r\n          <h1>Contact info</h1>\r\n        </p>\r\n        <hr />\r\n        <p>\r\n          jaredrwight@gmail.com\r\n        </p>\r\n    \r\n      </Jumbotron>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;","import React from 'react';\r\nimport Jumbotron from 'react-bootstrap/Jumbotron'\r\n\r\nconst NA = () => {\r\n    return (\r\n        <Jumbotron>\r\n            <h1 className=\"display-1\">404</h1>\r\n            <hr />\r\n            <p>Page does not exist.</p>\r\n        </Jumbotron>\r\n    )\r\n}\r\n\r\nexport default NA;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom';\nimport './index.css';\nimport Header from './components/Navbar'\nimport Home from \"./home\"\nimport Portfolio from './Portfolio.js'\nimport Contact from './Contact.js'\nimport NotFound from \"./404\"\nimport * as serviceWorker from './serviceWorker';\nimport '../node_modules/bootstrap/dist/css/bootstrap.min.css'\n\nconst router = (\n\n    <Router>\n        <div>\n            <Header />\n            <Switch>\n                <Route exact path=\"/\" component={Home} />\n                <Route path=\"/portfolio\" component={Portfolio} />\n                <Route path=\"/contact\" component={Contact} />\n                <Route component={NotFound} />\n            </Switch>\n        </div>\n    </Router>\n)\n\nReactDOM.render(router, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}